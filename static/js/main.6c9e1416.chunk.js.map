{"version":3,"sources":["mock/tasks.js","TasksContext.js","Task.jsx","ColumnTasks.jsx","definitions.js","RoutineAddModal.jsx","Board.js","App.js","index.js"],"names":["serverTasks","id","title","status","author","description","created_at","progress","TasksContext","createContext","TasksProvider","children","useState","tasks","setTasks","Provider","value","STATUSES","urgent","normal","default","task","useContext","useDrag","item","type","drag","menu","onClick","filter","Item","icon","DeleteOutlined","ref","className","color","getColorByStatus","Button","size","style","position","right","overlay","placement","EllipsisOutlined","marginTop","href","toLowerCase","onDrop","handleDrop","useCallback","useDrop","accept","drop","span","height","printTasks","length","map","index","Task","image","Empty","PRESENTED_IMAGE_SIMPLE","NOT_STARTED","IN_PROGRESS","COMPLETED","setVisible","onCancel","visible","footer","name","layout","initialValues","onFinish","routine","Math","round","random","label","rules","required","message","TextArea","rows","Option","htmlType","Board","routineModalVisible","setRoutineModalVisible","groupedTasks","useMemo","grouped","forEach","Array","isArray","push","getGroupedTasks","startList","inProgressList","completedList","droppedTo","droppedTask","gutter","DndProvider","backend","HTML5Backend","ColumnTasks","RoutineAddModal","App","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6c9e1416.chunk.js","sourcesContent":["const serverTasks = [\n  {\n    id: 100,\n    title: \"Wash your FCKNG face.\",\n    status: \"Urgent\",\n    author: \"Mike\",\n    description: \"Description.\",\n    created_at: \"2021-01-01 00:00:00\",\n    progress: \"not_started\"\n  },\n  {\n    id: 101,\n    title: \"Eat your FCKNG food.\",\n    status: \"Normal\",\n    description: \"Description FCKNG.\",\n    author: \"Mike\",\n    created_at: \"2021-01-01 00:10:00\",\n    progress: \"not_started\"\n  },\n  {\n    id: 102,\n    title: \"Clear your FCKNG bedroom.\",\n    description: \"Description FCKNG bedroom\",\n    status: \"Urgent\",\n    author: \"Valera\",\n    created_at: \"2021-01-01 00:00:00\",\n    progress: \"in_progress\"\n  },\n  {\n    id: 105,\n    title: \"Get up from your FCKNG bed.\",\n    description: \"Description FCKNG bed\",\n    status: \"Normal\",\n    author: \"Lena\",\n    created_at: \"2021-01-01 00:00:00\",\n    progress: \"completed\"\n  }\n];\n\nexport default serverTasks;\n","import { useState, createContext } from \"react\";\nimport serverTasks from \"./mock/tasks\";\n\nexport const TasksContext = createContext();\n\nexport const TasksProvider = ({ children }) => {\n  const [tasks, setTasks] = useState(serverTasks);\n  return (\n    <TasksContext.Provider value={{ tasks, setTasks }}>\n      {children}\n    </TasksContext.Provider>\n  );\n};\n","import { Card, Tag, Dropdown, Menu } from \"antd\";\nimport { EllipsisOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport { useDrag } from \"react-dnd\";\nimport { useContext } from \"react\";\nimport { TasksContext } from \"./TasksContext\";\n\nconst STATUSES = {\n  urgent: \"red\",\n  normal: \"blue\",\n  default: \"lime\"\n};\n\nconst MENU_KEY_REMOVE = \"remove\";\n\nexport default (task) => {\n  const { id, title, status, author, description } = task;\n  const { setTasks } = useContext(TasksContext);\n  const [, drag] = useDrag({\n    item: { task, type: \"default\" }\n  });\n\n  const handleMenuClick = () => {\n    setTasks((tasks) => tasks.filter((task) => task.id !== id));\n  };\n\n  const menu = (\n    <Menu onClick={handleMenuClick}>\n      <Menu.Item key={MENU_KEY_REMOVE} icon={<DeleteOutlined />}>\n        Remove\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <div ref={drag} className=\"taskItem\">\n      <Card>\n        <Tag color={getColorByStatus(status)}>{status}</Tag>\n        <Dropdown.Button\n          size=\"small\"\n          style={{ position: \"absolute\", right: \"20px\" }}\n          overlay={menu}\n          placement=\"bottomRight\"\n          icon={<EllipsisOutlined />}\n        />\n        <div style={{ marginTop: \"10px\" }}>\n          <div className=\"taskTitle\">{title}</div>\n          <div className=\"taskDescription\">{description}</div>\n          <b>\n            Author: <a href=\"#\">{author}</a>\n          </b>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nfunction getColorByStatus(status = \"\") {\n  return STATUSES[status.toLowerCase()] ?? STATUSES[\"default\"];\n}\n","import Task from \"./Task\";\nimport { Col, Empty } from \"antd\";\nimport { useDrop } from \"react-dnd\";\nimport { useCallback } from \"react\";\n\nexport default ({ type, tasks, onDrop }) => {\n  const handleDrop = useCallback((item) => onDrop(type, item), [type, onDrop]);\n\n  const [, drop] = useDrop({\n    accept: [\"default\"],\n    drop: handleDrop\n  });\n\n  return (\n    <Col span={8}>\n      <div ref={drop} style={{ height: \"100%\" }}>\n        {printTasks(tasks)}\n      </div>\n    </Col>\n  );\n};\n\nfunction printTasks(tasks = []) {\n  return tasks.length > 0 ? (\n    tasks.map((item, index) => <Task key={index} {...item} />)\n  ) : (\n    <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} />\n  );\n}\n","export const NOT_STARTED = \"not_started\";\nexport const IN_PROGRESS = \"in_progress\";\nexport const COMPLETED = \"completed\";\n","import React from \"react\";\nimport { Modal, Form, Input, Button, Select } from \"antd\";\n\nexport default ({ setVisible, setTasks }) => {\n  const initialValues = { status: \"Normal\" };\n\n  const onFinish = (routine) => {\n    setTasks((tasks) => [\n      ...tasks,\n      {\n        ...routine,\n        author: \"Default Author\",\n        id: getRandomId(),\n        progress: \"not_started\"\n      }\n    ]);\n    setVisible(false);\n  };\n\n  const onCancel = () => {\n    setVisible(false);\n  };\n\n  return (\n    <Modal\n      title=\"New FCKNG routine\"\n      onCancel={onCancel}\n      visible={true}\n      footer={null}\n    >\n      <Form\n        name=\"basic\"\n        layout=\"vertical\"\n        initialValues={initialValues}\n        onFinish={onFinish}\n      >\n        <Form.Item\n          label=\"Title\"\n          name=\"title\"\n          rules={[{ required: true, message: \"Please input title!\" }]}\n        >\n          <Input />\n        </Form.Item>\n\n        <Form.Item label=\"Description\" name=\"description\">\n          <Input.TextArea rows={3} />\n        </Form.Item>\n\n        <Form.Item label=\"Status\" name=\"status\">\n          <Select>\n            <Select.Option value=\"Urgent\">Urgent</Select.Option>\n            <Select.Option value=\"Normal\">Normal</Select.Option>\n            <Select.Option value=\"Lime\">Lime :)</Select.Option>\n          </Select>\n        </Form.Item>\n\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Add\n          </Button>\n          &nbsp;&nbsp;&nbsp;\n          <Button onClick={onCancel}>Cancel</Button>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nfunction getRandomId() {\n  return Math.round(100 + Math.random() * (100000 - 100));\n}\n","import { useContext, useMemo, useState } from \"react\";\nimport { Row, Col, Button } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./styles.css\";\nimport ColumnTasks from \"./ColumnTasks\";\nimport { DndProvider } from \"react-dnd\";\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\nimport { NOT_STARTED, IN_PROGRESS, COMPLETED } from \"./definitions\";\nimport RoutineAddModal from \"./RoutineAddModal\";\nimport { TasksContext } from \"./TasksContext\";\n\nexport default function Board() {\n  const { tasks, setTasks } = useContext(TasksContext);\n  const [routineModalVisible, setRoutineModalVisible] = useState(false);\n\n  const groupedTasks = useMemo(() => getGroupedTasks(tasks), [tasks]);\n  const startList = useMemo(() => groupedTasks[NOT_STARTED], [groupedTasks]);\n  const inProgressList = useMemo(() => groupedTasks[IN_PROGRESS], [\n    groupedTasks\n  ]);\n  const completedList = useMemo(() => groupedTasks[COMPLETED], [groupedTasks]);\n\n  const onDrop = (droppedTo, { task: droppedTask }) => {\n    if (droppedTask.progress === droppedTo) {\n      return;\n    }\n\n    setTasks((tasks) => {\n      const notChangedTasks = tasks.filter(\n        (task) => task.id !== droppedTask.id\n      );\n      return [...notChangedTasks, { ...droppedTask, progress: droppedTo }];\n    });\n  };\n\n  return (\n    <div className=\"main-wrapper\">\n      <h2>\n        Do your FCKNG routines\n        <br />\n        <Button\n          type=\"primary\"\n          className=\"btn-add\"\n          onClick={() => setRoutineModalVisible(true)}\n        >\n          Add FCKNG routine\n        </Button>\n      </h2>\n\n      <Row gutter={24} className=\"tasksHeader\">\n        <Col span={8}>Not Started</Col>\n        <Col span={8}>In Progress</Col>\n        <Col span={8}>Completed</Col>\n      </Row>\n\n      <DndProvider backend={HTML5Backend}>\n        <Row gutter={24}>\n          <ColumnTasks type={NOT_STARTED} onDrop={onDrop} tasks={startList} />\n          <ColumnTasks\n            type={IN_PROGRESS}\n            onDrop={onDrop}\n            tasks={inProgressList}\n          />\n          <ColumnTasks type={COMPLETED} onDrop={onDrop} tasks={completedList} />\n        </Row>\n      </DndProvider>\n\n      {routineModalVisible && (\n        <RoutineAddModal\n          setTasks={setTasks}\n          setVisible={setRoutineModalVisible}\n        />\n      )}\n    </div>\n  );\n}\n\nfunction getGroupedTasks(tasks) {\n  const grouped = {};\n\n  tasks.forEach((task) => {\n    if (Array.isArray(grouped[task.progress])) {\n      grouped[task.progress].push(task);\n    } else {\n      grouped[task.progress] = [task];\n    }\n  });\n\n  return grouped;\n}\n","import \"antd/dist/antd.css\";\nimport \"./styles.css\";\nimport Board from \"./Board\";\nimport { TasksProvider } from \"./TasksContext\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <TasksProvider>\n        <Board />\n      </TasksProvider>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}